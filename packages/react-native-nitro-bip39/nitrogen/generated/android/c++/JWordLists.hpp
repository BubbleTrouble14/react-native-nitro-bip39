///
/// JWordLists.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "WordLists.hpp"

namespace margelo::nitro::bip39 {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "WordLists" and the the Kotlin enum "WordLists".
   */
  struct JWordLists final: public jni::JavaClass<JWordLists> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/bip39/WordLists;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum WordLists.
     */
    [[maybe_unused]]
    WordLists toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("ordinal");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<WordLists>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JWordLists> fromCpp(WordLists value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldCHINESE_SIMPLIFIED = clazz->getStaticField<JWordLists>("CHINESE_SIMPLIFIED");
      static const auto fieldCHINESE_TRADITIONAL = clazz->getStaticField<JWordLists>("CHINESE_TRADITIONAL");
      static const auto fieldCZECH = clazz->getStaticField<JWordLists>("CZECH");
      static const auto fieldENGLISH = clazz->getStaticField<JWordLists>("ENGLISH");
      static const auto fieldFRENCH = clazz->getStaticField<JWordLists>("FRENCH");
      static const auto fieldITALIAN = clazz->getStaticField<JWordLists>("ITALIAN");
      static const auto fieldJAPANESE = clazz->getStaticField<JWordLists>("JAPANESE");
      static const auto fieldKOREAN = clazz->getStaticField<JWordLists>("KOREAN");
      static const auto fieldPORTUGUESE = clazz->getStaticField<JWordLists>("PORTUGUESE");
      static const auto fieldSPANISH = clazz->getStaticField<JWordLists>("SPANISH");
      
      switch (value) {
        case WordLists::CHINESE_SIMPLIFIED:
          return clazz->getStaticFieldValue(fieldCHINESE_SIMPLIFIED);
        case WordLists::CHINESE_TRADITIONAL:
          return clazz->getStaticFieldValue(fieldCHINESE_TRADITIONAL);
        case WordLists::CZECH:
          return clazz->getStaticFieldValue(fieldCZECH);
        case WordLists::ENGLISH:
          return clazz->getStaticFieldValue(fieldENGLISH);
        case WordLists::FRENCH:
          return clazz->getStaticFieldValue(fieldFRENCH);
        case WordLists::ITALIAN:
          return clazz->getStaticFieldValue(fieldITALIAN);
        case WordLists::JAPANESE:
          return clazz->getStaticFieldValue(fieldJAPANESE);
        case WordLists::KOREAN:
          return clazz->getStaticFieldValue(fieldKOREAN);
        case WordLists::PORTUGUESE:
          return clazz->getStaticFieldValue(fieldPORTUGUESE);
        case WordLists::SPANISH:
          return clazz->getStaticFieldValue(fieldSPANISH);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::runtime_error("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::bip39
